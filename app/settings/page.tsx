"use client";
import { useSession } from "next-auth/react";
import { useEffect, useState } from "react";

export default function SettingsPage() {
  const { data: session } = useSession();
  const [email, setEmail] = useState("");
  const [avatar, setAvatar] = useState("");
  const [savingProfile, setSavingProfile] = useState(false);
  const [profileMsg, setProfileMsg] = useState<string | null>(null);

  const [curPwd, setCurPwd] = useState("");
  const [newPwd, setNewPwd] = useState("");
  const [newPwd2, setNewPwd2] = useState("");
  const [savingPwd, setSavingPwd] = useState(false);
  const [pwdMsg, setPwdMsg] = useState<string | null>(null);

  useEffect(() => {
    setEmail((session as any)?.user?.email || "");
    setAvatar((session as any)?.user?.image || "");
  }, [session]);

  async function saveProfile() {
    setSavingProfile(true);
    setProfileMsg(null);
    try {
      const res = await fetch("/api/settings/profile", {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email, avatar }),
      });
      if (!res.ok) throw new Error("Save failed");
      setProfileMsg("Profil byl √∫spƒõ≈°nƒõ ulo≈æen.");
    } catch (e: any) {
      setProfileMsg("Chyba p≈ôi ukl√°d√°n√≠ profilu.");
    } finally {
      setSavingProfile(false);
    }
  }

  async function changePassword() {
    if (newPwd.length < 6)
      return setPwdMsg("Nov√© heslo mus√≠ m√≠t alespo≈à 6 znak≈Ø.");
    if (newPwd !== newPwd2) return setPwdMsg("Hesla se neshoduj√≠.");
    setSavingPwd(true);
    setPwdMsg(null);
    try {
      const res = await fetch("/api/settings/password", {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          currentPassword: curPwd,
          newPassword: newPwd,
        }),
      });
      if (!res.ok) {
        const j = await res.json().catch(() => ({}));
        throw new Error(j?.error || "Change failed");
      }
      setCurPwd("");
      setNewPwd("");
      setNewPwd2("");
      setPwdMsg("Heslo bylo √∫spƒõ≈°nƒõ zmƒõnƒõno.");
    } catch (e: any) {
      setPwdMsg(e.message || "Chyba p≈ôi zmƒõnƒõ hesla.");
    } finally {
      setSavingPwd(false);
    }
  }

  return (
    <div className="settings-container">
      {/* Header */}
      <div className="settings-header">
        <h1>‚öôÔ∏è Nastaven√≠ √∫ƒçtu</h1>
        <p>Upravte sv≈Øj profil a zmƒõ≈àte heslo pro v√°≈° Legacy RP √∫ƒçet</p>
      </div>

      {/* Profile Settings */}
      <div className="card">
        <div className="section-header">
          <h2 className="section-title">üë§ Profil</h2>
          <div className="section-subtitle">Upravte sv√© z√°kladn√≠ informace</div>
        </div>

        <div className="settings-form">
          <div className="form-row">
            <div className="form-group">
              <label className="form-label">
                <span className="label-text">E-mailov√° adresa</span>
                <input
                  className="form-input"
                  type="email"
                  placeholder="vase-email@example.com"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                />
              </label>
            </div>

            <div className="form-group">
              <label className="form-label">
                <span className="label-text">Avatar URL</span>
                <input
                  className="form-input"
                  type="url"
                  placeholder="https://example.com/avatar.jpg"
                  value={avatar}
                  onChange={(e) => setAvatar(e.target.value)}
                />
              </label>
              {avatar && (
                <div className="avatar-preview">
                  <img
                    src={avatar}
                    alt="Avatar preview"
                    className="preview-image"
                    onError={(e) => {
                      (e.target as HTMLImageElement).style.display = "none";
                    }}
                  />
                </div>
              )}
            </div>
          </div>

          <div className="form-actions">
            <button
              className="btn btn-primary"
              onClick={saveProfile}
              disabled={savingProfile}
            >
              {savingProfile ? (
                <div className="btn-loading">
                  <div className="loading-spinner"></div>
                  Ukl√°d√°m...
                </div>
              ) : (
                "Ulo≈æit profil"
              )}
            </button>
            {profileMsg && (
              <div
                className={`form-message ${
                  profileMsg.includes("√∫spƒõ≈°nƒõ") ? "success" : "error"
                }`}
              >
                {profileMsg}
              </div>
            )}
          </div>
        </div>
      </div>

      {/* Password Settings */}
      <div className="card">
        <div className="section-header">
          <h2 className="section-title">üîê Zmƒõna hesla</h2>
          <div className="section-subtitle">
            Zmƒõ≈àte heslo pro lep≈°√≠ zabezpeƒçen√≠
          </div>
        </div>

        <div className="settings-form">
          <div className="form-group">
            <label className="form-label">
              <span className="label-text">Souƒçasn√© heslo</span>
              <input
                className="form-input"
                type="password"
                placeholder="Zadejte souƒçasn√© heslo"
                value={curPwd}
                onChange={(e) => setCurPwd(e.target.value)}
              />
            </label>
          </div>

          <div className="form-row">
            <div className="form-group">
              <label className="form-label">
                <span className="label-text">Nov√© heslo</span>
                <input
                  className="form-input"
                  type="password"
                  placeholder="Zadejte nov√© heslo"
                  value={newPwd}
                  onChange={(e) => setNewPwd(e.target.value)}
                />
              </label>
            </div>

            <div className="form-group">
              <label className="form-label">
                <span className="label-text">Potvrzen√≠ nov√©ho hesla</span>
                <input
                  className="form-input"
                  type="password"
                  placeholder="Potvrƒète nov√© heslo"
                  value={newPwd2}
                  onChange={(e) => setNewPwd2(e.target.value)}
                />
              </label>
            </div>
          </div>

          <div className="password-requirements">
            <h4>Po≈æadavky na heslo:</h4>
            <ul>
              <li className={newPwd.length >= 6 ? "valid" : ""}>
                ‚úì Minim√°lnƒõ 6 znak≈Ø
              </li>
              <li
                className={
                  newPwd === newPwd2 && newPwd2.length > 0 ? "valid" : ""
                }
              >
                ‚úì Hesla se mus√≠ shodovat
              </li>
            </ul>
          </div>

          <div className="form-actions">
            <button
              className="btn btn-primary"
              onClick={changePassword}
              disabled={savingPwd || newPwd.length < 6 || newPwd !== newPwd2}
            >
              {savingPwd ? (
                <div className="btn-loading">
                  <div className="loading-spinner"></div>
                  Mƒõn√≠m heslo...
                </div>
              ) : (
                "Zmƒõnit heslo"
              )}
            </button>
            {pwdMsg && (
              <div
                className={`form-message ${
                  pwdMsg.includes("√∫spƒõ≈°nƒõ") ? "success" : "error"
                }`}
              >
                {pwdMsg}
              </div>
            )}
          </div>
        </div>
      </div>

      {/* Account Info */}
      <div className="card">
        <div className="section-header">
          <h2 className="section-title">üìä Informace o √∫ƒçtu</h2>
          <div className="section-subtitle">P≈ôehled va≈°eho Legacy RP √∫ƒçtu</div>
        </div>

        <div className="account-info">
          <div className="info-grid">
            <div className="info-item">
              <div className="info-label">U≈æivatelsk√© jm√©no</div>
              <div className="info-value">{(session as any)?.user?.name}</div>
            </div>
            <div className="info-item">
              <div className="info-label">√öƒçet ID</div>
              <div className="info-value">#{(session as any)?.id}</div>
            </div>
            <div className="info-item">
              <div className="info-label">Status</div>
              <div className="info-value">
                <span className="status-badge active">Aktivn√≠</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Danger Zone */}
      <div className="card danger-zone">
        <div className="section-header">
          <h2 className="section-title">‚ö†Ô∏è Nebezpeƒçn√° z√≥na</h2>
          <div className="section-subtitle">Tyto akce jsou nevratn√©</div>
        </div>

        <div className="danger-actions">
          <p className="danger-warning">
            Pokud m√°te probl√©my s √∫ƒçtem, kontaktujte administraci na Discordu
            nebo f√≥ru m√≠sto pou≈æit√≠ tƒõchto akc√≠.
          </p>
        </div>
      </div>
    </div>
  );
}
